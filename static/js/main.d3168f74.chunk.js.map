{"version":3,"sources":["controllers/store/index.js","controllers/store/reducers/user.js","controllers/store/reducers/desbravadores.js","controllers/store/reducers/transacoes.js","controllers/database/index.js","views/components/transacao.js","views/components/desbravadores.js","views/pages/Inicial.js","views/pages/controle.js","controllers/router/index.js","views/components/header.js","App.js","serviceWorker.js","index.js"],"names":["reducers","user","state","arguments","length","undefined","action","type","data","dbvs","trans","combineReducers","database","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","DB","getAll","_callee","node","order","limit","dbv","_args","regenerator_default","a","wrap","_context","prev","next","collection","abrupt","orderBy","get","t0","console","log","stop","this","updateSaldo","_callee2","key","tipo","valor","saldo","_context2","doc","then","exists","Error","Object","objectSpread","id","parseFloat","update","add","desbravador","nome","Date","t1","register","_callee3","unidade","_context3","delete","_callee4","_context4","Transacao","desbravadores","options","getOptions","e","_this","props","map","text","value","setState","submit","_this$state","preventDefault","updateList","data2","lista","lista2","sent","forEach","push","setList","_this2","react_default","createElement","className","onSubmit","Select","required","selection","onChange","target","Component","connect","dispatch","clearList","mapStateToProps","transacoes","mapDispatchToProps","origin","TabelaGeral","open","close","remove","loadMore","items","dados","Confirm","content","concat","onCancel","onConfirm","cancelButton","confirmButton","header","item","index","Renderer","assign","expandable","onClick","Fragment","Tabela","Desbravadores","transacao","Inicial","components_desbravadores","RegistrarComp","unidades","error","Registrar","Controle","items2","_this3","panes","menuItem","render","active","toMillis","toLocaleDateString","Tab","menu","secondary","pointing","Router","routes","name","path","exact","HashRouter","Switch","route","Route","component","Menu","href","store","createStore","App","es","router","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3168f74.chunk.js","sourcesContent":["import { combineReducers } from \"redux\" \r\n\r\nimport UserReducer from \"./reducers/user\"\r\nimport DbvReducer from \"./reducers/desbravadores\"\r\nimport TransReducers from \"./reducers/transacoes\"\r\n\r\nconst reducers = {\r\n    user: UserReducer,\r\n    dbvs: DbvReducer,\r\n    trans: TransReducers\r\n}\r\n\r\nexport default combineReducers(reducers)","export default function user(state = null, action) {\r\n    switch(action.type){\r\n        case \"LOGIN\":\r\n            return action.data\r\n        case \"LOGOFF\":\r\n            return null\r\n        default: \r\n            return state\r\n    }\r\n}","export default function desbravadores (state = [],action){\r\n    switch(action.type){\r\n        case \"SET_LIST\":\r\n            return action.data\r\n        case \"CLEAR_LIST\":\r\n            return []\r\n        default:\r\n            return state\r\n    }\r\n}","export default function transacoes (state = [],action){\r\n    switch(action.type){\r\n        case \"SET_TRANS\":\r\n            return action.data\r\n        case \"CLEAR_TRANS\":\r\n            return []\r\n        default:\r\n            return state\r\n    }\r\n}","const firebase = require(\"firebase\");\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCg2l2m9dwEJWP8gfrj4GVeiqqWGPXMPnw\",\r\n  authDomain: \"elo-bank.firebaseapp.com\",\r\n  databaseURL: \"https://elo-bank.firebaseio.com\",\r\n  projectId: \"elo-bank\",\r\n  storageBucket: \"elo-bank.appspot.com\",\r\n  messagingSenderId: \"1016193516480\"\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nconst database = app.firestore();\r\n\r\nclass DB {\r\n  static getAll = async (node,order,limit = 10) => {\r\n    try {\r\n      const dbv = database.collection(node);\r\n      return dbv.orderBy(order, \"desc\").limit(limit).get();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  static updateSaldo = async (key, tipo, valor) => {\r\n    try {\r\n      const collection = database.collection(\"desbravadores\");\r\n      let dbv;\r\n      await collection.doc(key).get().then(doc => {\r\n          if(doc.exists)\r\n           dbv = { key: doc.id, ...doc.data() }\r\n          else throw Error(\"Desbravador não encontrado\")\r\n      })\r\n      let saldo = 0;\r\n      switch (tipo) {\r\n        case \"credito\":\r\n          saldo = dbv.saldo + parseFloat(valor);\r\n          break;\r\n        case \"debito\":\r\n          saldo = dbv.saldo - parseFloat(valor);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (saldo < 0) {\r\n        throw Error(\"Saldo insuficiente\");\r\n      }\r\n      collection.doc(key).update({\r\n        saldo: saldo\r\n      });\r\n      database.collection(\"transacoes\").add({\r\n        desbravador: dbv.nome,\r\n        tipo,\r\n        valor: parseFloat(valor),\r\n        data: new Date()\r\n      })\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  static register = async (nome, unidade) => {\r\n    try {\r\n      await database.collection(\"desbravadores\").add({\r\n        nome,\r\n        unidade,\r\n        saldo: 0\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  static delete = async (node,key) => {\r\n      try {\r\n          database.collection(node).doc(key).delete()\r\n      } catch(error){\r\n          throw error\r\n      }\r\n  }\r\n}\r\n\r\nexport default DB;\r\n","import React, { Component } from \"react\";\r\n\r\nimport DB from \"../../controllers/database\";\r\nimport { Select } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Transacao extends Component {\r\n  state = {\r\n    desbravadores: [],\r\n    options: []\r\n  };\r\n  async componentDidMount() {\r\n    await this.updateList();\r\n    this.getOptions();\r\n  }\r\n  getOptions = e => {\r\n    const options = this.props.desbravadores.map(dbv => {\r\n      return {\r\n        key: dbv.key,\r\n        text: dbv.nome,\r\n        value: dbv.key\r\n      };\r\n    });\r\n    this.setState({ options });\r\n  };\r\n  submit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const { id, tipo, valor } = this.state;\r\n      await DB.updateSaldo(id, tipo, valor);\r\n      this.setState({ id: 0, tipo: \"\", valor: \"\" });\r\n      this.updateList();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  updateList = async () => {\r\n    const data = await DB.getAll(\"desbravadores\",\"saldo\");\r\n    const data2 = await DB.getAll(\"transacoes\",\"data\");\r\n    let lista = [];\r\n    let lista2 = [];\r\n    data.forEach(doc => lista.push({ key: doc.id, ...doc.data() }));\r\n    data2.forEach(doc => lista2.push({ key: doc.id, ...doc.data() }));\r\n    this.props.setList(\"desbravadores\",lista);\r\n    this.props.setList(\"transacoes\",lista2);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui centered card\">\r\n        <div className=\"content\">\r\n          <div className=\"title\">Nova transação</div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <div className=\"ui form\">\r\n            <form onSubmit={this.submit}>\r\n              <div className=\"ui field\">\r\n                <label>Desbravador</label>\r\n                <Select\r\n                  required\r\n                  selection\r\n                  options={this.state.options}\r\n                  onChange={(e, data) => this.setState({ id: data.value })}\r\n                  value={this.state.id}\r\n                />\r\n              </div>\r\n              <div className=\"ui field\">\r\n                <label>Tipo</label>\r\n                <Select\r\n                  required\r\n                  selection\r\n                  options={[\r\n                    { key: \"credito\", text: \"Crédito\", value: \"credito\" },\r\n                    { key: \"debito\", text: \"Débito\", value: \"debito\" }\r\n                  ]}\r\n                  onChange={(e, data) => this.setState({ tipo: data.value })}\r\n                  value={this.state.tipo}\r\n                />\r\n              </div>\r\n              <div className=\"ui field\">\r\n                <label>Valor</label>\r\n                <input\r\n                  required\r\n                  type=\"number\"\r\n                  onChange={e => {\r\n                    this.setState({ valor: e.target.value });\r\n                  }}\r\n                  value={this.state.valor}\r\n                />\r\n              </div>\r\n              <button className=\"ui primary button\">Enviar</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setList: (node,data) => dispatch({ type: node === \"desbravadores\" ? \"SET_LIST\" : \"SET_TRANS\", data }),\r\n    clearList: () => dispatch({ type: \"CLEAR_LIST\" })\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    desbravadores: state.dbvs\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Transacao);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Confirm } from \"semantic-ui-react\";\r\n\r\nimport Transacao from \"./transacao\";\r\nimport DB from \"../../controllers/database\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    desbravadores: state.dbvs,\r\n    transacoes: state.trans\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setList: (origin, data) => {\r\n      dispatch({\r\n        type: origin === \"desbravadores\" ? \"SET_LIST\" : \"SET_TRANS\",\r\n        data\r\n      });\r\n    },\r\n    clearList: () => dispatch({ type: \"CLEAR_LIST\" })\r\n  };\r\n};\r\n\r\nclass TabelaGeral extends Component {\r\n  state = { open: false, key: \"\", nome: \"\", lista: [], limit: 10 };\r\n  open = (key, nome) => {\r\n    this.setState({ key, nome, open: true });\r\n  };\r\n  close = () => this.setState({ open: false });\r\n  remove = async () => {\r\n    await DB.delete(this.props.node, this.state.key);\r\n    this.close();\r\n  };\r\n  loadMore = () => {\r\n    this.setState({ limit: this.state.limit + 10 }, () => {\r\n      this.updateList();\r\n    });\r\n  };\r\n  updateList = async () => {\r\n    const data = await DB.getAll(\r\n      this.props.node,\r\n      this.props.order,\r\n      this.state.limit\r\n    );\r\n    let items = [];\r\n    data.forEach(doc => items.push(doc.data()));\r\n    this.props.setList(this.props.node, items);\r\n  };\r\n  render() {\r\n    if (this.props.dados !== [])\r\n      return (\r\n        <div>\r\n          <table className=\"ui compact table\">\r\n            <Confirm\r\n              content={`Você tem certeza que deseja remover ${\r\n                this.state.nome\r\n              }?`}\r\n              open={this.state.open}\r\n              onCancel={this.close}\r\n              onConfirm={this.remove}\r\n              cancelButton=\"Cancelar\"\r\n              confirmButton=\"Confirmar\"\r\n            />\r\n            <thead>{this.props.header}</thead>\r\n            <tbody>\r\n              {this.props.dados.map((item, index) => {\r\n                let { Renderer } = this.props;\r\n                return (\r\n                  <tr key={this.props.node + \"-\" + index}>\r\n                    <Renderer\r\n                      {...item}\r\n                      id={item.key}\r\n                      index={index}\r\n                      open={this.open}\r\n                    />\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          {this.props.expandable && (\r\n            <div\r\n              className=\"ui left aligned primary button\"\r\n              onClick={e => this.loadMore()}\r\n            >\r\n              Ver mais\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    return <></>;\r\n  }\r\n}\r\n\r\nconst Tabela = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TabelaGeral);\r\n\r\nexport { Tabela };\r\n\r\nclass Desbravadores extends Component {\r\n  state = {\r\n    lista: []\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui stackable grid centered container\">\r\n        <div className=\"ui row\">\r\n          <div className=\"ui ten wide column\">\r\n            <Tabela\r\n              node=\"desbravadores\"\r\n              order={\"saldo\"}\r\n              dados={this.props.desbravadores}\r\n              header={\r\n                <tr>\r\n                  <th className=\"collapsing\">Posição</th>\r\n                  <th>Desbravador</th>\r\n                  <th className=\"collapsing\">Unidade</th>\r\n                  <th className=\"collapsing\">Saldo</th>\r\n                </tr>\r\n              }\r\n              Renderer={props => (\r\n                <>\r\n                  <td>{props.index + 1}º</td>\r\n                  <td>{props.nome}</td>\r\n                  <td>{props.unidade}</td>\r\n                  <td>E${props.saldo}</td>\r\n                </>\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"ui four wide column\">\r\n            <Transacao />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Desbravadores);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Desbravadores from \"../components/desbravadores\"\r\n\r\nclass Inicial extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui container fluid\">\r\n        <Desbravadores></Desbravadores>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  null\r\n)(Inicial);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Select, Confirm, Tab } from \"semantic-ui-react\";\r\nimport { Tabela } from \"../components/desbravadores\";\r\nimport Transacao from \"../components/transacao\";\r\n\r\nimport DB from \"../../controllers/database\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    desbravadores: state.dbvs,\r\n    transacoes: state.trans\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setList: (origin, data) => {\r\n      dispatch({\r\n        type: origin === \"desbravadores\" ? \"SET_LIST\" : \"SET_TRANS\",\r\n        data\r\n      });\r\n    },\r\n    clearList: () => dispatch({ type: \"CLEAR_LIST\" })\r\n  };\r\n};\r\n\r\nclass RegistrarComp extends Component {\r\n  state = {\r\n    nome: \"\",\r\n    unidade: \"\",\r\n    unidades: [\r\n      { key: \"diretoria\", text: \"Diretoria\", value: \"Diretoria\" },\r\n      { key: \"mercurio\", text: \"Mercúrio\", value: \"Mercúrio\" },\r\n      { key: \"paladio\", text: \"Paládio\", value: \"Paládio\" },\r\n      { key: \"platina\", text: \"Platina\", value: \"Platina\" },\r\n      { key: \"uranio\", text: \"Urânio\", value: \"Urânio\" },\r\n      { key: \"titanio\", text: \"Titânio\", value: \"Titânio\"}\r\n    ],\r\n    open: false\r\n  };\r\n  open = e => {\r\n    e.preventDefault();\r\n    this.setState({ open: true });\r\n  };\r\n  close = () => this.setState({ open: false });\r\n  submit = () => {\r\n    try {\r\n      DB.register(this.state.nome, this.state.unidade);\r\n      this.updateList();\r\n      this.setState({ open: false, nome: \"\", unidade: \"\" });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  updateList = async () => {\r\n    const data = await DB.getAll(\"desbravadores\", \"saldo\");\r\n    let items = [];\r\n    data.forEach(doc => items.push(doc.data()));\r\n    this.props.setList(\"desbravadores\", items);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui centered card\">\r\n        <Confirm\r\n          content={`Você tem certeza que deseja registrar ${this.state.nome}?`}\r\n          open={this.state.open}\r\n          onCancel={this.close}\r\n          onConfirm={this.submit}\r\n          cancelButton=\"Cancelar\"\r\n          confirmButton=\"Confirmar\"\r\n        />\r\n        <div className=\"content\">Registrar Desbravador</div>\r\n        <div className=\"content\">\r\n          <div className=\"ui form\">\r\n            <form onSubmit={this.open}>\r\n              <div className=\"ui field\">\r\n                <label>Nome</label>\r\n                <input\r\n                  required\r\n                  value={this.state.nome}\r\n                  onChange={e => this.setState({ nome: e.target.value })}\r\n                />\r\n              </div>\r\n              <div className=\"ui field\">\r\n                <label>Unidade</label>\r\n                <Select\r\n                  required\r\n                  options={this.state.unidades}\r\n                  value={this.state.unidade}\r\n                  onChange={(e, data) => this.setState({ unidade: data.value })}\r\n                />\r\n              </div>\r\n              <button className=\"ui primary button\">Registrar</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Registrar = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RegistrarComp);\r\n\r\nclass Controle extends Component {\r\n  componentDidMount() {\r\n    this.updateList();\r\n  }\r\n  updateList = async () => {\r\n    const data = await DB.getAll(\"desbravadores\", \"saldo\", this.state.limit);\r\n    const data2 = await DB.getAll(\"transacoes\", \"data\", this.state.limit);\r\n    let items = [],\r\n      items2 = [];\r\n    data.forEach(doc => items.push({ key: doc.id, ...doc.data() }));\r\n    data2.forEach(doc => items2.push({ key: doc.id, ...doc.data() }));\r\n    this.props.setList(\"desbravadores\", items);\r\n    this.props.setList(\"transacoes\", items2);\r\n  };\r\n  state = {};\r\n  panes = [\r\n    {\r\n      menuItem: \"Desbravadores\",\r\n      render: () => {\r\n        return (\r\n          <div className=\"ui centered stackable grid container\">\r\n            <div className=\"ui row\">\r\n              <div className=\"ui ten wide column\">\r\n                <Tabela\r\n                  dados={this.props.desbravadores}\r\n                  node={\"desbravadores\"}\r\n                  order={\"saldo\"}\r\n                  expandable={true}\r\n                  header={\r\n                    <tr>\r\n                      <th className=\"collapsing\">Posição</th>\r\n                      <th>Desbravador</th>\r\n                      <th className=\"collapsing\">Unidade</th>\r\n                      <th className=\"collapsing\">Saldo</th>\r\n                      <th className=\"collapsing\" />\r\n                    </tr>\r\n                  }\r\n                  Renderer={props => (\r\n                    <>\r\n                      <td>{props.index + 1}º</td>\r\n                      <td>{props.nome}</td>\r\n                      <td>{props.unidade}</td>\r\n                      <td>E${props.saldo}</td>\r\n                      <td>\r\n                        <div\r\n                          onClick={e => props.open(props.id, props.nome)}\r\n                          className=\"ui red icon button\"\r\n                        >\r\n                          <i className=\"icon close\" />\r\n                        </div>\r\n                      </td>\r\n                    </>\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className=\"ui four wide column\">\r\n                <Registrar />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      menuItem: \"Transações\",\r\n      active: true,\r\n      render: () => {\r\n        return (\r\n          <div className=\"ui centered stackable grid container\">\r\n            <div className=\"ui row\">\r\n              <div className=\"ui ten wide column\">\r\n                <Tabela\r\n                  node={\"transacoes\"}\r\n                  order={\"data\"}\r\n                  expandable={true}\r\n                  dados={this.props.transacoes}\r\n                  header={\r\n                    <tr>\r\n                      <th className=\"collapsing\">Índice</th>\r\n                      <th>Desbravador</th>\r\n                      <th className=\"collapsing\">Data</th>\r\n                      <th className=\"collapsing\">Tipo</th>\r\n                      <th className=\"collapsing\">Valor</th>\r\n                    </tr>\r\n                  }\r\n                  Renderer={props => {\r\n                    return (\r\n                      <>\r\n                        <td>{props.index + 1}</td>\r\n                        <td>{props.desbravador}</td>\r\n                        <td>\r\n                          {new Date(props.data.toMillis()).toLocaleDateString(\r\n                            \"pt\"\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {props.tipo === \"credito\" ? \"Crédito\" : \"Débito\"}\r\n                        </td>\r\n                        <td>E${props.valor}</td>\r\n                      </>\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"ui four wide column\">\r\n                <Transacao />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n  render() {\r\n    return (\r\n      <div className=\"ui container fluid\">\r\n        <Tab panes={this.panes} menu={{ secondary: true, pointing: true }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Controle);\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Inicial from \"../../views/pages/Inicial\";\r\nimport Controle from \"../../views/pages/controle\";\r\n\r\nclass Router extends Component {\r\n  routes = [\r\n    { name: \"Inicial\", path: \"/\", Component: Inicial, exact: true },\r\n    { name: \"Controle\", path: \"/controle\", Component: Controle, exact: true }\r\n  ];\r\n  render() {\r\n    return (\r\n      <div className=\"router\">\r\n        <HashRouter>\r\n          <Switch>\r\n            {this.routes.map(route => (\r\n              <Route\r\n                key={route.name}\r\n                path={route.path}\r\n                exact={route.exact}\r\n                name={route.name}\r\n                component={route.Component}\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\r\n\r\nclass Menu extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"ui top fixed inverted primary menu\">\r\n                <a className=\"item\" href=\"#/\">Inicial</a>\r\n                <a className=\"item\" href=\"#/controle\">Controle</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu","import React, { Component } from 'react';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\n\nimport './css/App.css';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport reducers from './controllers/store'\nimport Router from './controllers/router'\nimport Menu from \"./views/components/header\"\n\n// Criando a store\nconst store = createStore(reducers)\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Menu/>\n        <Provider store={store}>\n          <Router></Router>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}